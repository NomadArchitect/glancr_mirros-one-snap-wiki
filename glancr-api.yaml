openapi: 3.0.0
info:
  version: 0.0.2
  title: mirr.OS ReST API
  description: >
    Documentation of the mirr.OS ReST API, the operating system of the [glancr
    Smart Mirror](https://glancr.de).


    Conforms to [JSON:API](http://jsonapi.org/format/) specification, so each
    endpoint [wraps resources in a
    top-level](http://jsonapi.org/format/#document-top-level) `data` member on
    2xx responses or `errors` member on 4xx/5xx responses.
  contact:
    name: glancr Team
    url: 'https://glancr.de'
    email: kontakt@glancr.de
servers:
  - url: 'http://localhost/api/v1'
    description: Local API host
paths:
  /widgets:
    get:
      summary: Returns a list of installed widgets.
      tags:
        - Widgets
      parameters:
        - in: query
          name: include-available
          schema:
            type: boolean
          example: false
          description: Optional inclusion of widgets that are available for installation.
      responses:
        '200':
          description: A JSON array of widgets
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Widget'
                  - $ref: '#/components/schemas/JSONApiMember'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      summary: Install a widget
      tags:
        - Widgets
      requestBody:
        description: The WidgetIdentifier object for the widget to be installed.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WidgetIdentifier'
      responses:
        '200':
          description: Installs a new widget in the backend.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/WidgetIdentifier'
        '404':
          $ref: '#/components/responses/NotFound'
  '/widgets/{widgetId}':
    get:
      summary: Get a widget by its ID
      tags:
        - Widgets
      responses:
        '200':
          description: A single widget.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Widget'
    patch:
      summary: Update a widget in the backend.
      tags:
        - Widgets
      requestBody:
        description: The WidgetIdentifier object for the widget to be updated.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/WidgetIdentifier'
      responses:
        '200':
          description: Update successful.
        '404':
          description: Widget is not installed.
        '409':
          $ref: '#/components/responses/Conflict'
    delete:
      summary: Uninstall a widget from the backend.
      tags:
        - Widgets
      responses:
        '204':
          description: Widgets successfully uninstalled
        '404':
          $ref: '#/components/responses/NotFound'
  '/widgets/{widgetId}/instances':
    get:
      summary: Get all instances of a widget.
      tags:
        - Widgets
      responses:
        '200':
          description: An array of instances for the widget.
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/InstanceIdentifier'
                  - $ref: '#/components/schemas/JSONApiMember'
  /instances:
    get:
      summary: Returns a list of active instances.
      tags:
        - Instances
      parameters:
        - in: query
          name: uses-source
          schema:
            type: array
            items:
              type: string
          example:
            - google
          description: Optional filter by source(s) that are available for installation.
      responses:
        '200':
          description: A JSON array of active instances.
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Instance'
                  - $ref: '#/components/schemas/JSONApiMember'
    post:
      summary: Create a new instance with default settings.
      tags:
        - Instances
      requestBody:
        description: The ID of the widget for which a new instance should be created.
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/WidgetIdentifier'
      responses:
        '201':
          description: The newly created instance with default settings.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Instance'
  '/instances/{instanceId}':
    get:
      summary: Get an instance by its ID.
      tags:
        - Instances
      responses:
        '200':
          description: A JSON object of this instance's configuration.
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Instance'
                  - $ref: '#/components/schemas/JSONApiMember'
    put:
      summary: Updates settings for an instance.
      tags:
        - Instances
      requestBody:
        description: The updated instance.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/Instance'
      responses:
        '204':
          description: Instance was successfully updated.
    delete:
      summary: Delete an instance from the backend.
      tags:
        - Instances
      responses:
        '204':
          description: Instance successfully deleted
        '404':
          $ref: '#/components/responses/NotFound'
  '/instances/{instanceId}/widget':
    get:
      summary: Get the base widget for a given instance ID.
      tags:
        - Instances
      responses:
        '200':
          description: A widget identifier for the instance's base widget.
          content:
            application/vnd.api+json:
              schema:
                allOf:
                  - type: object
                    properties:
                      data:
                        type: object
                        $ref: '#/components/schemas/Widget'
                  - $ref: '#/components/schemas/JSONApiMember'
  /sources:
    get:
      summary: Returns a list of installed sources.
      tags:
        - Sources
      responses:
        '200':
          description: A JSON array of installed sources.
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Source'
    post:
      summary: Installs a new source.
      tags:
        - Sources
      requestBody:
        description: The ID of the source which a new instance should be created.
        required: true
        content:
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/SourceIdentifier'
      responses:
        '201':
          description: The newly created instance with default settings.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Instance'
  '/sources/{sourceId}':
    get:
      summary: Get a source by its ID.
      tags:
        - Sources
      responses:
        '200':
          description: A JSON object of this instance's configuration.
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Instance'
  /groups:
    get:
      summary: List all available groups.
      tags:
        - Groups
      responses:
        '200':
          description: A list of all available groups.
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'
  '/groups/{groupId}':
    get:
      summary: Get group info.
      tags:
        - Groups
      responses:
        '200':
          description: Group description.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Group'
  /services:
    get:
      summary: List all available services.
      tags:
        - Services
      responses:
        '200':
          description: A JSON object with all available services.
          content:
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'
  '/services/{serviceId}':
    get:
      summary: Get service info.
      tags:
        - Services
      responses:
        '200':
          description: Service description.
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service'
    patch:
      tags:
        - Services
      summary: Change the state of a service (with optional parameters).
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  $ref: '#/components/schemas/Service'
      responses:
        '200':
          description: Description of available run parameters.
  /system:
    get:
      tags:
        - System
      summary: TODO mirr.OS basic information.
      responses:
        '200':
          description: meh
    patch:
      tags:
        - System
      summary: Update mirr.OS to the specified version.
      responses:
        '200':
          description: Update successful.
  /system/settings:
    get:
      tags:
        - System
      summary: TODO Get the current system settings.
      responses:
        '200':
          description: meh
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Setting'
    patch:
      tags:
        - System
      summary: Change the current system settings
      responses:
        '204':
          description: Setting successfully changed.
components:
  responses:
    BadRequest:
      description: Bad request
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JSONApiErrorResponse'
    NotFound:
      description: Not found
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JSONApiErrorResponse'
    Conflict:
      description: Conflict
      content:
        application/vnd.api+json:
          schema:
            $ref: '#/components/schemas/JSONApiErrorResponse'
  schemas:
    JSONApiErrorResponse:
      allOf:
        - type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/JSONApiErrorObject'
        - $ref: '#/components/schemas/JSONApiMember'
    JSONApiMember:
      type: object
      properties:
        jsonapi:
          type: object
          properties:
            version:
              type: string
              example: '1.0'
    JSONApiResourceIdentifierObject:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - widget
            - instance
            - source
            - service
            - setting
    JSONApiResourceObject:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            attributes:
              type: object
            relationships:
              type: object
    JSONApiErrorObject:
      type: object
      properties:
        status:
          type: string
        title:
          type: string
          example: An error occured.
          description: >-
            a short, human-readable summary of the problem that SHOULD NOT
            change from occurrence to occurrence of the problem, except for
            purposes of localization.
    WidgetIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
      type: object
      properties:
        id:
          example: mywidget
        type:
          type: string
          enum:
            - widget
    Widget:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceObject'
        - $ref: '#/components/schemas/WidgetIdentifier'
        - type: object
          properties:
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: MyWidget
                icon:
                  type: string
                  example: /icons/my-widget/icon.svg
                version:
                  type: string
                  pattern: '^\d{1}.\d{1}.\d{1}$'
                  example: 1.0.0
                creator:
                  type: string
                  example: Mr. Robot
                website:
                  type: string
                  example: 'https://glancr.de/modules/productivity/mywidget'
                languages:
                  type: array
                installed:
                  type: boolean
                  example: true
            relationships:
              type: object
              properties:
                groups:
                  type: object
                  properties:
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                        related:
                          type: string
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/GroupIdentifier'
                instances:
                  type: object
                  properties:
                    links:
                      type: object
                      properties:
                        self:
                          type: string
                        related:
                          type: string
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/InstanceIdentifier'
    InstanceIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            id:
              example: mywidget-1
            type:
              type: string
              enum:
                - instance
    Instance:
      allOf:
        - $ref: '#/components/schemas/InstanceIdentifier'
        - type: object
          properties:
            attributes:
              type: object
              properties:
                settings:
                  type: object
                position:
                  type: object
                  properties:
                    x:
                      type: integer
                      example: 4
                    'y':
                      type: integer
                    width:
                      type: integer
                      minimum: 1
                    height:
                      type: integer
                      minimum: 1
            relationships:
              type: object
              properties:
                widget:
                  type: object
                  properties:
                    data:
                      type: object
                      $ref: '#/components/schemas/WidgetIdentifier'
    SourceIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            type:
              type: string
              enum:
                - source
    Source:
      allOf:
        - $ref: '#/components/schemas/SourceIdentifier'
        - type: object
          properties:
            attributes:
              type: object
              properties:
                installed:
                  type: boolean
                  example: true
            relationships:
              type: object
              properties:
                groups:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/GroupIdentifier'
    GroupIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            id:
              example: calendar
            type:
              type: string
              enum:
                - group
    Group:
      allOf:
        - $ref: '#/components/schemas/GroupIdentifier'
        - type: object
          properties:
            relationships:
              type: object
              properties:
                widgets:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/WidgetIdentifier'
                sources:
                  type: object
                  properties:
                    data:
                      type: array
                      items:
                        $ref: '#/components/schemas/SourceIdentifier'
    ServiceIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            type:
              enum:
                - service
    Service:
      allOf:
        - $ref: '#/components/schemas/ServiceIdentifier'
        - type: object
          properties:
            id:
              example: display-rotate
            attributes:
              type: object
              properties:
                status:
                  type: string
                  example: toggle
                parameters:
                  type: object
                  example:
                    orientation: '3'
            relationships:
              type: object
              properties:
                provider:
                  type: object
                  properties:
                    data:
                      type: object
                      $ref: '#/components/schemas/WidgetIdentifier'
    SettingIdentifier:
      allOf:
        - $ref: '#/components/schemas/JSONApiResourceIdentifierObject'
        - type: object
          properties:
            id:
              example: user.mail
            type:
              enum:
                - setting
    Setting:
      allOf:
        - $ref: '#/components/schemas/SettingIdentifier'
        - type: object
          properties:
            attributes:
              type: object
              properties:
                value:
                  type: string
                  example: user@example.com
tags:
  - name: Widgets
    description: >-
      Widgets define which and how data is displayed. A widget implements a
      settings dialog in the configuration UI, as well as frontend templates to
      style the output. Widgets can be installed or uninstalled through the
      configuration UI.
  - name: Instances
    description: >-
      Widgets can have 1 to n instances, each with separate settings and
      positioning.
  - name: Sources
    description: >-
      Sources define how data is retrieved from a single provider, possibly with
      authentication. Widgets and sources are `n-to-n` relation.
  - name: Groups
    description: >-
      Groups describe the possible combinations of widgets and data sources.
      Each source-type member of a group is expected to expose functionality to
      all widget-type members of the same group.
  - name: Services
    description: >-
      Services are called on the backend server, e. g. to run additional
      scripts, do maintenance or similar tasks.
  - name: System
    description: >-
      Endpoints for mirr.OS settings. Although they are similar to widgets and
      sources, mirr.OS cannot be instantiated or uninstalled.
